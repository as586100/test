//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace SalesInput.HCTWebService {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HCTWebService.Service1Soap")]
    public interface Service1Soap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet TransData(string company, string password, System.Data.DataSet data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> TransDataAsync(string company, string password, System.Data.DataSet data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransData_Json", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string TransData_Json(string company, string password, string json);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransData_Json", ReplyAction="*")]
        System.Threading.Tasks.Task<string> TransData_JsonAsync(string company, string password, string json);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransData_Xml", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string TransData_Xml(string company, string password, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransData_Xml", ReplyAction="*")]
        System.Threading.Tasks.Task<string> TransData_XmlAsync(string company, string password, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QueryEDELNO", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet QueryEDELNO(string company, string password, System.Data.DataSet data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QueryEDELNO", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> QueryEDELNOAsync(string company, string password, System.Data.DataSet data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QueryEDELNO_Json", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string QueryEDELNO_Json(string company, string password, string json);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QueryEDELNO_Json", ReplyAction="*")]
        System.Threading.Tasks.Task<string> QueryEDELNO_JsonAsync(string company, string password, string json);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QueryEDELNO_Xml", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string QueryEDELNO_Xml(string company, string password, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QueryEDELNO_Xml", ReplyAction="*")]
        System.Threading.Tasks.Task<string> QueryEDELNO_XmlAsync(string company, string password, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet UpdData(string company, string password, System.Data.DataSet data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> UpdDataAsync(string company, string password, System.Data.DataSet data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdData_Json", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdData_Json(string company, string password, string json);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdData_Json", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdData_JsonAsync(string company, string password, string json);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdData_Xml", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdData_Xml(string company, string password, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdData_Xml", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdData_XmlAsync(string company, string password, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FamiQueryData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string FamiQueryData(string sCompany, string sPassword, string dsCusXML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FamiQueryData", ReplyAction="*")]
        System.Threading.Tasks.Task<string> FamiQueryDataAsync(string sCompany, string sPassword, string dsCusXML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransPINCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string TransPINCode(string sCompany, string sPassword, string edelno, string sPINCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransPINCode", ReplyAction="*")]
        System.Threading.Tasks.Task<string> TransPINCodeAsync(string sCompany, string sPassword, string edelno, string sPINCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UniSelect", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UniSelect(string sCompany, string sPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UniSelect", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UniSelectAsync(string sCompany, string sPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Edelno", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Edelno(string sCompany, string sPassword, [System.ServiceModel.MessageParameterAttribute(Name="Edelno")] string Edelno1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Edelno", ReplyAction="*")]
        System.Threading.Tasks.Task<string> EdelnoAsync(string sCompany, string sPassword, string Edelno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TxtData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet TxtData(string company, string password, string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TxtData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> TxtDataAsync(string company, string password, string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet TransReport(string sCompany, string sPassword, System.Data.DataSet dsCus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransReport", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> TransReportAsync(string sCompany, string sPassword, System.Data.DataSet dsCus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransReport_Json", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string TransReport_Json(string sCompany, string sPassword, string dsCusJson);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransReport_Json", ReplyAction="*")]
        System.Threading.Tasks.Task<string> TransReport_JsonAsync(string sCompany, string sPassword, string dsCusJson);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransReport_XML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string TransReport_XML(string sCompany, string sPassword, string dsCusXML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransReport_XML", ReplyAction="*")]
        System.Threading.Tasks.Task<string> TransReport_XMLAsync(string sCompany, string sPassword, string dsCusXML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/outputTXT", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string outputTXT(string sDateyyyyMMdd, string sESCSNO, string sType1or7);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/outputTXT", ReplyAction="*")]
        System.Threading.Tasks.Task<string> outputTXTAsync(string sDateyyyyMMdd, string sESCSNO, string sType1or7);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface Service1SoapChannel : SalesInput.HCTWebService.Service1Soap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1SoapClient : System.ServiceModel.ClientBase<SalesInput.HCTWebService.Service1Soap>, SalesInput.HCTWebService.Service1Soap {
        
        public Service1SoapClient() {
        }
        
        public Service1SoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1SoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1SoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1SoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet TransData(string company, string password, System.Data.DataSet data) {
            return base.Channel.TransData(company, password, data);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> TransDataAsync(string company, string password, System.Data.DataSet data) {
            return base.Channel.TransDataAsync(company, password, data);
        }
        
        public string TransData_Json(string company, string password, string json) {
            return base.Channel.TransData_Json(company, password, json);
        }
        
        public System.Threading.Tasks.Task<string> TransData_JsonAsync(string company, string password, string json) {
            return base.Channel.TransData_JsonAsync(company, password, json);
        }
        
        public string TransData_Xml(string company, string password, string xml) {
            return base.Channel.TransData_Xml(company, password, xml);
        }
        
        public System.Threading.Tasks.Task<string> TransData_XmlAsync(string company, string password, string xml) {
            return base.Channel.TransData_XmlAsync(company, password, xml);
        }
        
        public System.Data.DataSet QueryEDELNO(string company, string password, System.Data.DataSet data) {
            return base.Channel.QueryEDELNO(company, password, data);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> QueryEDELNOAsync(string company, string password, System.Data.DataSet data) {
            return base.Channel.QueryEDELNOAsync(company, password, data);
        }
        
        public string QueryEDELNO_Json(string company, string password, string json) {
            return base.Channel.QueryEDELNO_Json(company, password, json);
        }
        
        public System.Threading.Tasks.Task<string> QueryEDELNO_JsonAsync(string company, string password, string json) {
            return base.Channel.QueryEDELNO_JsonAsync(company, password, json);
        }
        
        public string QueryEDELNO_Xml(string company, string password, string xml) {
            return base.Channel.QueryEDELNO_Xml(company, password, xml);
        }
        
        public System.Threading.Tasks.Task<string> QueryEDELNO_XmlAsync(string company, string password, string xml) {
            return base.Channel.QueryEDELNO_XmlAsync(company, password, xml);
        }
        
        public System.Data.DataSet UpdData(string company, string password, System.Data.DataSet data) {
            return base.Channel.UpdData(company, password, data);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> UpdDataAsync(string company, string password, System.Data.DataSet data) {
            return base.Channel.UpdDataAsync(company, password, data);
        }
        
        public string UpdData_Json(string company, string password, string json) {
            return base.Channel.UpdData_Json(company, password, json);
        }
        
        public System.Threading.Tasks.Task<string> UpdData_JsonAsync(string company, string password, string json) {
            return base.Channel.UpdData_JsonAsync(company, password, json);
        }
        
        public string UpdData_Xml(string company, string password, string xml) {
            return base.Channel.UpdData_Xml(company, password, xml);
        }
        
        public System.Threading.Tasks.Task<string> UpdData_XmlAsync(string company, string password, string xml) {
            return base.Channel.UpdData_XmlAsync(company, password, xml);
        }
        
        public string FamiQueryData(string sCompany, string sPassword, string dsCusXML) {
            return base.Channel.FamiQueryData(sCompany, sPassword, dsCusXML);
        }
        
        public System.Threading.Tasks.Task<string> FamiQueryDataAsync(string sCompany, string sPassword, string dsCusXML) {
            return base.Channel.FamiQueryDataAsync(sCompany, sPassword, dsCusXML);
        }
        
        public string TransPINCode(string sCompany, string sPassword, string edelno, string sPINCode) {
            return base.Channel.TransPINCode(sCompany, sPassword, edelno, sPINCode);
        }
        
        public System.Threading.Tasks.Task<string> TransPINCodeAsync(string sCompany, string sPassword, string edelno, string sPINCode) {
            return base.Channel.TransPINCodeAsync(sCompany, sPassword, edelno, sPINCode);
        }
        
        public string UniSelect(string sCompany, string sPassword) {
            return base.Channel.UniSelect(sCompany, sPassword);
        }
        
        public System.Threading.Tasks.Task<string> UniSelectAsync(string sCompany, string sPassword) {
            return base.Channel.UniSelectAsync(sCompany, sPassword);
        }
        
        public string Edelno(string sCompany, string sPassword, string Edelno1) {
            return base.Channel.Edelno(sCompany, sPassword, Edelno1);
        }
        
        public System.Threading.Tasks.Task<string> EdelnoAsync(string sCompany, string sPassword, string Edelno) {
            return base.Channel.EdelnoAsync(sCompany, sPassword, Edelno);
        }
        
        public System.Data.DataSet TxtData(string company, string password, string path) {
            return base.Channel.TxtData(company, password, path);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> TxtDataAsync(string company, string password, string path) {
            return base.Channel.TxtDataAsync(company, password, path);
        }
        
        public System.Data.DataSet TransReport(string sCompany, string sPassword, System.Data.DataSet dsCus) {
            return base.Channel.TransReport(sCompany, sPassword, dsCus);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> TransReportAsync(string sCompany, string sPassword, System.Data.DataSet dsCus) {
            return base.Channel.TransReportAsync(sCompany, sPassword, dsCus);
        }
        
        public string TransReport_Json(string sCompany, string sPassword, string dsCusJson) {
            return base.Channel.TransReport_Json(sCompany, sPassword, dsCusJson);
        }
        
        public System.Threading.Tasks.Task<string> TransReport_JsonAsync(string sCompany, string sPassword, string dsCusJson) {
            return base.Channel.TransReport_JsonAsync(sCompany, sPassword, dsCusJson);
        }
        
        public string TransReport_XML(string sCompany, string sPassword, string dsCusXML) {
            return base.Channel.TransReport_XML(sCompany, sPassword, dsCusXML);
        }
        
        public System.Threading.Tasks.Task<string> TransReport_XMLAsync(string sCompany, string sPassword, string dsCusXML) {
            return base.Channel.TransReport_XMLAsync(sCompany, sPassword, dsCusXML);
        }
        
        public string outputTXT(string sDateyyyyMMdd, string sESCSNO, string sType1or7) {
            return base.Channel.outputTXT(sDateyyyyMMdd, sESCSNO, sType1or7);
        }
        
        public System.Threading.Tasks.Task<string> outputTXTAsync(string sDateyyyyMMdd, string sESCSNO, string sType1or7) {
            return base.Channel.outputTXTAsync(sDateyyyyMMdd, sESCSNO, sType1or7);
        }
    }
}
